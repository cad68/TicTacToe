/*
*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'aguste13' at '10/18/16 8:18 PM' with Gradle 3.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.1/userguide/tutorial_java_projects.html

 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'application'
apply from: 'cobertura.gradle'
//apply plugin: 'distribution'

mainClassName = "com.draumateymid.tictactoe.TicTacToe"

// In this section you declare where to find the dependencies of your project
repositories {
	// Use 'jcenter' for resolving your dependencies.
	// You can declare any Maven/Ivy/file repository here.
	jcenter()
}

//set sorceset for selenium
sourceSets {
	selenium
}


// In this section you declare the dependencies for your production and test code
dependencies {
	// The production code uses the SLF4J logging API at compile time
	compile 'org.slf4j:slf4j-api:1.7.21'

	// Declare the dependency for your favourite test framework you want to use in your tests.
	// TestNG is also supported by the Gradle Test task. Just change the
	// testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
	// 'test.useTestNG()' to your build script.
	testCompile 'junit:junit:4.12'
	compile 'com.sparkjava:spark-core:2.5'

	// Selenium dependencies
	seleniumCompile 'junit:junit:4.11'
	seleniumCompile 'org.seleniumhq.selenium:selenium-firefox-driver:3.0.1'
	seleniumCompile 'org.seleniumhq.selenium:selenium-chrome-driver:3.0.1'
}

//add a manifest to the project
jar {
	manifest {
		attributes("Main-Class": "com.draumateymid.tictactoe.TicTacToe") 
	}
}



//
if (JavaVersion.current().isJava8Compatible()) {
	allprojects {
		tasks.withType(Javadoc) {
			options.addStringOption('Xdoclint:none', '-quiet')
		}
	}
}

//prepare heroku
task stage {
	dependsOn installDist
}

//Create javadoc from source code
task myJavadocs(type: Javadoc) {
	source = sourceSets.main.allJava
	classpath = configurations.compile  
}



//
task selenium(type: Test, dependsOn: installDist) {
	testClassesDir = sourceSets.selenium.output.classesDir
	classpath = sourceSets.selenium.runtimeClasspath
}

//Deploy project
task deploy(type: Exec){ 
	commandLine 'bash','./bin/deploy'
}

