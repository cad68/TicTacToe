# Design report

TicTacToe is a game that is often played with paper and pencil. The purpose of this project is to design a software to play the game. The initial design is for a console version of the game. The second version is web based version. Both design is included in this report.

## The Game
In both designs the game is for two human players. Player X is first
### The console version
The game is a designed as a console program for two human players. They choose who is player one and player two and take turns choosing a number from 1-9 that represents a field on the game board. The chosen field is filled up with an X for player one and an O for player two. If one of the players manages to fill a row of three with his symbol he has won the game and the game ends. If all nine fields have been filled up with either ‘X’ or ‘O’ and neither player managed to get three in a row, there is a draw and the game ends.

![alt text][logo]

[logo]: TicTacToe.png

## The web version

## Noun Identification
From the description in previous section (The Game) these nouns are subtracted as potential class names;
 * Game
 * Players
 * Turn
 * Console
 * Program
 * Human
 * Numbers
 * Game board
 * Fields
 * Winner
 
### Classes
From the noun identification method above these 4 classes have been chosen as  the original design.

```javascript
Public class DisplayGameBoard
    Public void displayTicTac(Char[] board)
```

```javascript
Public class GameStatus
    Public boolean checkWinner(Char[] board)
    Public boolean gameIsOver()
    Public boolean draw()
    Private boolean checkWinnerHorizontal()
    Private boolean checkWinnerDiagonal(Char[] board)
    Private boolean checkWinnerVertical(Char[] board)
    Private boolean isEmpty(int input)
```

```javascript
Public class GameRunner
    Private Char[] board = new Char[9];
    Private void fillField(int input, string marker)
        board[input-1] = marker;
    Private boolean isEmpty(int input)
    Private int getInput
    Private boolean checkInput(int input)
        Integer is valid (1-9)
        isEmpty(int input)
        Return true
        Return false
    Public Char[] getBoard();    
    Public void movePlayer(string marker)
        do
        Int input = getInput();
        While (checkInput(int input))
        fillField(int input, string marker)
        displayBoard(Char[] board)
```

```javascript
Public class TicTacToe
    Private GameRunner runner
    Private GameStatus board
    
    Main()
        while(!GameStatus.gameIsOver())
            runner.movePlayer(“X”)
            if(GameStatus.checkWinner(runner.getBoard())
                runner.makeWinner(“X”)
                break
            Else if(GameStatus.Draw())
                println(It’s a draw!)
                break
            runner.movePlayer(“O”)
            if(GameStatus.checkWinnermove.getBoard())
                runner.makeWinner(“O”)
                break
```
